[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "eddy_covariance"
version = "0.1.0"
description = "A comprehensive package for processing eddy covariance data"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = [
    "eddy covariance",
    "micrometeorology",
    "flux measurements",
    "atmospheric science",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
]

dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "statsmodels>=0.13.0",
    "matplotlib>=3.4.0",
    "xarray>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=2.12.0",
    "black>=21.7b0",
    "ruff>=0.1.0",
    "mypy>=0.910",
    "pre-commit>=2.17.0",
]

docs = [
    "sphinx>=4.1.0",
    "sphinx-rtd-theme>=0.5.0",
    "numpydoc>=1.1.0",
    "myst-parser>=0.18.0",
]

viz = [
    "seaborn>=0.11.0",
    "plotly>=5.3.0",
]

parallel = [
    "dask>=2021.8.0",
    "distributed>=2021.8.0",
]

io = [
    "netCDF4>=1.5.0",
    "h5py>=3.3.0",
]

complete = [
    "eddy_covariance[dev]",
    "eddy_covariance[docs]",
    "eddy_covariance[viz]",
    "eddy_covariance[parallel]",
    "eddy_covariance[io]",
]

[project.urls]
Homepage = "https://github.com/yourusername/eddy_covariance"
Documentation = "https://eddy-covariance.readthedocs.io"
Repository = "https://github.com/yourusername/eddy_covariance.git"
Issues = "https://github.com/yourusername/eddy_covariance/issues"

[project.scripts]
eddy-process = "eddy_covariance.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["eddy_covariance"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=eddy_covariance"
testpaths = [
    "tests",
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
select = ["E", "F", "B", "I", "UP"]
ignore = ["E203", "E501"]
target-version = "py38"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*",
    "pandas.*",
    "matplotlib.*",
    "seaborn.*",
    "netCDF4.*",
]
ignore_missing_imports = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

